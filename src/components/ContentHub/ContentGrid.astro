---
import type { CollectionEntry } from 'astro:content';
import { getCategoryImagePath } from '../../lib/feed/utils/imageUtils';

interface Props {
  content: CollectionEntry<'news'>[];
}

const { content } = Astro.props;
const MAX_DISPLAY_ITEMS = 500;

function getReadTime(summary: string): number {
  const wordsPerMinute = 200;
  const words = summary.trim().split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
}
---

<div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
  {content.slice(0, MAX_DISPLAY_ITEMS).map((item) => (
    <article class="group bg-white rounded-xl shadow-sm overflow-hidden hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
      <a href={item.data.url} target="_blank" rel="noopener noreferrer" class="block">
        <!-- Image -->
        <div class="relative aspect-video overflow-hidden">
          <img
            src={getCategoryImagePath(item.data.category)}
            alt={`${item.data.category} category image`}
            class="w-full h-full object-cover transform group-hover:scale-105 transition-all duration-300"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent" />
          <div class="absolute bottom-4 left-4">
            <span class="px-3 py-1 text-sm font-medium bg-white/95 text-gray-900 rounded-full shadow-sm backdrop-blur-sm">
              {item.data.category}
            </span>
          </div>
        </div>

        <div class="p-5">
          <!-- Metadata -->
          <div class="flex items-center space-x-4 text-sm text-gray-500 mb-3">
            <time datetime={item.data.publishDate.toISOString()} class="text-sm text-gray-500">
              {new Intl.DateTimeFormat('en-US', {
                month: 'short',
                day: 'numeric',
              }).format(item.data.publishDate)}
            </time>
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              {getReadTime(item.data.summary)} min read
            </span>
          </div>

          <!-- Content -->
          <h2 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2 group-hover:text-blue-600 transition-colors">
            {item.data.title}
          </h2>
          <p class="text-gray-600 text-sm line-clamp-2">
            {item.data.summary}
          </p>

          <!-- Read More -->
          <div class="mt-4 flex items-center justify-between">
            <span class="text-sm font-medium text-gray-600">
              {item.data.vendor}
            </span>
            <span class="text-sm font-medium text-blue-600 group-hover:text-blue-800 transition-colors">
              Read article â†’
            </span>
          </div>
        </div>
      </a>
    </article>
  ))}
</div>